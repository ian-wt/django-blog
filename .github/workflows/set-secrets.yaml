name: Set Secrets

on:
  workflow_dispatch:

env:
  SECRET_NAME: "<django-blog>-prod-env"
  CLUSTER_NAME: "<cluster-name>"
  NAMESPACE: "default"

jobs:
  set_secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Configure kubectl for DO
        run: |
          set -e
          doctl kubernetes cluster kubeconfig save --expiry-seconds 300 ${{ env.CLUSTER_NAME }}
      - name: Delete existing secret
        run: |
          set -e
          if kubectl get secret ${{ env.SECRET_NAME }} -n ${{ env.NAMESPACE }} >/dev/null 2>&1; then
            kubectl delete secret ${{ env.SECRET_NAME }} -n ${{ env.NAMESPACE }}
          fi
      - name: Create new secret
        run: |
          set -e
          kubectl create secret generic ${{ env.SECRET_NAME }} -n ${{ env.NAMESPACE }} \
            --from-literal=DJANGO_SECRET_KEY="${{ secrets.DJANGO_SECRET_KEY }}" \
            --from-literal=DJANGO_DEBUG="${{ secrets.DJANGO_DEBUG }}" \
            --from-literal=DJANGO_ALLOWED_HOSTS="${{ secrets.DJANGO_ALLOWED_HOSTS }}" \
            --from-literal=DJANGO_CSRF_TRUSTED_ORIGINS="${{ secrets.DJANGO_CSRF_TRUSTED_ORIGINS }}" \
            --from-literal=DJANGO_SETTINGS_MODULE="${{ secrets.DJANGO_SETTINGS_MODULE }}" \
            --from-literal=POSTGRES_REQUIRE_SSL="${{ secrets.POSTGRES_REQUIRE_SSL }}" \
            --from-literal=POSTGRES_DB="${{ secrets.POSTGRES_DB }}" \
            --from-literal=POSTGRES_USER="${{ secrets.POSTGRES_USER }}" \
            --from-literal=POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}" \
            --from-literal=POSTGRES_MIGRATOR="${{ secrets.POSTGRES_MIGRATOR }}" \
            --from-literal=POSTGRES_MIGRATOR_PASS="${{ secrets.POSTGRES_MIGRATOR_PASS }}" \
            --from-literal=POSTGRES_HOST="${{ secrets.POSTGRES_HOST }}" \
            --from-literal=POSTGRES_PORT="${{ secrets.POSTGRES_PORT }}" \
            --from-literal=REDIS_HOST="${{ secrets.REDIS_HOST }}" \
            --from-literal=REDIS_PORT="${{ secrets.REDIS_PORT }}" \
            --from-literal=REDIS_DB="${{ secrets.REDIS_DB }}" \
            --from-literal=STORAGE_ACCESS_KEY="${{ secrets.STORAGE_ACCESS_KEY }}" \
            --from-literal=STORAGE_SECRET_KEY="${{ secrets.STORAGE_SECRET_KEY }}"
      - name: Rollout restart
        run: |
          set -e
          kubectl rollout restart deployment app -n ${{ env.NAMESPACE }}
          kubectl rollout status deployment app -n ${{ env.NAMESPACE }} --timeout=90s
